version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: globalupc_db
    environment:
      POSTGRES_DB: globalupc
      POSTGRES_USER: globalupc
      POSTGRES_PASSWORD: globalupc_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - globalupc_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U globalupc"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: globalupc_backend
    environment:
      DATABASE_URL: postgresql://globalupc:globalupc_password@db:5432/globalupc
      PYTHONUNBUFFERED: 1
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - globalupc_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: globalupc_frontend
    ports:
      - "8080:80"
    volumes:
      - ./frontend/src:/usr/share/nginx/html:ro
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - globalupc_network

volumes:
  postgres_data:

networks:
  globalupc_network:
    driver: bridge
